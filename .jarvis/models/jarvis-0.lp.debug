Computing SAT-sufficient subset...

C^+(T):
  [0] schema("LabelSelectorOperator") :- input("type","string"). {()}
  [1] schema("Instance") :- input("type","object"), input("properties","objects","properties","obj0","$ref","#/components/schemas/ClusterRole0"), input("properties","objects","required",0,"obj0"), input("properties","objects","type","object"), input("required",0,"objects"). {()}
  [2] schema("FieldsV1"). {()}
  [3] schema("ClusterRole") :- input("type","object"), input("allOf",0,"$ref","#/components/schemas/TypeMeta"), input("properties","aggregationRule","nullable",true), input("properties","aggregationRule","allOf",0,"$ref","#/components/schemas/AggregationRule"), input("properties","aggregationRule","type","object"), input("properties","rules","items","$ref","#/components/schemas/PolicyRule"), input("properties","rules","type","array"), input("properties","metadata","$ref","#/components/schemas/ObjectMeta"). {()}
  [4] schema("LabelSelectorRequirement") :- input("type","object"), input("properties","values","items","type","string"), input("properties","values","type","array"), input("properties","operator","$ref","#/components/schemas/LabelSelectorOperator"), input("properties","key","type","string"), input("required",1,"operator"), input("required",0,"key"). {()}
  [5] schema("AggregationRule") :- input("properties","clusterRoleSelectors","items","$ref","#/components/schemas/LabelSelector"), input("properties","clusterRoleSelectors","type","array"), input("type","object"). {()}
  [6] schema("UID") :- input("type","string"). {()}
  [7] schema("ManagedFieldsOperationType") :- input("type","string"). {()}
  [8] schema("LabelSelector") :- input("type","object"), input("properties","matchExpressions","items","$ref","#/components/schemas/LabelSelectorRequirement"), input("properties","matchExpressions","type","array"), input("properties","matchLabels","additionalProperties","type","string"), input("properties","matchLabels","type","object"). {()}
  [9] schema("Time"). {()}
  [10] schema("ClusterRole0") :- input("type","object"), input("properties","rules","type","array"), input("allOf",1,"required",3,"rules"), input("allOf",1,"required",2,"metadata"), input("allOf",1,"required",1,"kind"), input("allOf",1,"required",0,"apiVersion"), input("allOf",0,"$ref","#/components/schemas/ClusterRole"), input("properties","rules","default",0,"verbs",1,"list"), input("properties","rules","default",0,"verbs",0,"get"), input("properties","rules","default",0,"resources",1,"configs/status"), input("properties","rules","default",0,"resources",0,"configs"), input("properties","rules","default",0,"apiGroups",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","verbs","default",1,"list"), input("properties","rules","items",0,"properties","verbs","default",0,"get"), input("properties","rules","items",0,"properties","verbs","enum",0,1,"list"), input("properties","rules","items",0,"properties","verbs","enum",0,0,"get"), input("properties","rules","items",0,"properties","verbs","items",1,"enum",0,"list"), input("properties","rules","items",0,"properties","verbs","items",1,"type","string"), input("properties","rules","items",0,"properties","verbs","items",0,"enum",0,"get"), input("properties","rules","items",0,"properties","verbs","items",0,"type","string"), input("properties","rules","items",0,"properties","verbs","type","array"), input("properties","rules","items",0,"properties","resources","default",1,"configs/status"), input("properties","rules","items",0,"properties","resources","default",0,"configs"), input("properties","rules","items",0,"properties","resources","enum",0,1,"configs/status"), input("properties","rules","items",0,"properties","resources","enum",0,0,"configs"), input("properties","rules","items",0,"properties","resources","items",1,"enum",0,"configs/status"), input("properties","rules","items",0,"properties","resources","items",1,"type","string"), input("properties","rules","items",0,"properties","resources","items",0,"enum",0,"configs"), input("properties","rules","items",0,"properties","resources","items",0,"type","string"), input("properties","rules","items",0,"properties","resources","type","array"), input("properties","rules","items",0,"properties","apiGroups","default",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","enum",0,0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","items",0,"enum",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","items",0,"type","string"), input("properties","rules","items",0,"properties","apiGroups","type","array"), input("properties","rules","items",0,"required",2,"verbs"), input("properties","rules","items",0,"required",1,"resources"), input("properties","rules","items",0,"required",0,"apiGroups"), input("properties","rules","items",0,"type","object"), input("properties","metadata","properties","name","enum",0,"config-viewer-role"), input("properties","metadata","properties","name","type","string"), input("properties","metadata","required",0,"name"), input("properties","metadata","type","object"), input("properties","kind","enum",0,"ClusterRole"), input("properties","kind","type","string"), input("properties","apiVersion","enum",0,"rbac/v1"), input("properties","apiVersion","type","string"). {()}
  [11] schema("OwnerReference") :- input("type","object"), input("properties","kind","type","string"), input("properties","apiVersion","type","string"), input("properties","uid","$ref","#/components/schemas/UID"), input("properties","name","type","string"), input("properties","blockOwnerDeletion","nullable",true), input("properties","blockOwnerDeletion","type","boolean"), input("properties","controller","nullable",true), input("properties","controller","type","boolean"), input("required",3,"uid"), input("required",2,"name"), input("required",1,"kind"), input("required",0,"apiVersion"). {()}
  [12] schema("TypeMeta") :- input("type","object"), input("properties","kind","type","string"), input("properties","apiVersion","type","string"). {()}
  [13] schema("ManagedFieldsEntry") :- input("type","object"), input("properties","apiVersion","type","string"), input("properties","subresource","type","string"), input("properties","fieldsV1","nullable",true), input("properties","fieldsV1","allOf",0,"$ref","#/components/schemas/FieldsV1"), input("properties","fieldsType","type","string"), input("properties","time","nullable",true), input("properties","time","allOf",0,"$ref","#/components/schemas/Time"), input("properties","operation","$ref","#/components/schemas/ManagedFieldsOperationType"), input("properties","manager","type","string"). {()}
  [14] schema("ObjectMeta") :- input("type","object"), input("properties","managedFields","items","$ref","#/components/schemas/ManagedFieldsEntry"), input("properties","managedFields","type","array"), input("properties","finalizers","items","type","string"), input("properties","finalizers","type","array"), input("properties","ownerReferences","items","$ref","#/components/schemas/OwnerReference"), input("properties","ownerReferences","type","array"), input("properties","annotations","additionalProperties","type","string"), input("properties","annotations","type","object"), input("properties","labels","additionalProperties","type","string"), input("properties","labels","type","object"), input("properties","deletionGracePeriodSeconds","nullable",true), input("properties","deletionGracePeriodSeconds","maximum","int(\"9223372036854775807\")"), input("properties","deletionGracePeriodSeconds","minimum","int(\"-9223372036854775808\")"), input("properties","deletionGracePeriodSeconds","type","integer"), input("properties","deletionTimestamp","nullable",true), input("properties","deletionTimestamp","allOf",0,"$ref","#/components/schemas/Time"), input("properties","creationTimestamp","$ref","#/components/schemas/Time"), input("properties","generation","format","int64"), input("properties","generation","type","integer"), input("properties","resourceVersion","type","string"), input("properties","uid","$ref","#/components/schemas/UID"), input("properties","selfLink","type","string"), input("properties","namespace","type","string"), input("properties","generateName","type","string"), input("properties","name","type","string"). {()}
  [15] schema("PolicyRule") :- input("type","object"), input("properties","nonResourceURLs","items","type","string"), input("properties","nonResourceURLs","type","array"), input("properties","resourceNames","items","type","string"), input("properties","resourceNames","type","array"), input("properties","resources","items","type","string"), input("properties","resources","type","array"), input("properties","apiGroups","items","type","string"), input("properties","apiGroups","type","array"), input("properties","verbs","items","type","string"), input("properties","verbs","type","array"), input("required",0,"verbs"). {()}



C^-(T):


Generalising...

G^+(T):
  [0] schema("LabelSelectorOperator") :- input("type","string"). {()}
  [1] schema("Instance") :- input("type","object"), input("properties","objects","properties","obj0","$ref","#/components/schemas/ClusterRole0"), input("properties","objects","required",0,"obj0"), input("properties","objects","type","object"), input("required",0,"objects"). {()}
  [2] schema("FieldsV1"). {()}
  [3] schema("ClusterRole") :- input("type","object"), input("allOf",0,"$ref","#/components/schemas/TypeMeta"), input("properties","aggregationRule","nullable",true), input("properties","aggregationRule","allOf",0,"$ref","#/components/schemas/AggregationRule"), input("properties","aggregationRule","type","object"), input("properties","rules","items","$ref","#/components/schemas/PolicyRule"), input("properties","rules","type","array"), input("properties","metadata","$ref","#/components/schemas/ObjectMeta"). {()}
  [4] schema("LabelSelectorRequirement") :- input("type","object"), input("properties","values","items","type","string"), input("properties","values","type","array"), input("properties","operator","$ref","#/components/schemas/LabelSelectorOperator"), input("properties","key","type","string"), input("required",1,"operator"), input("required",0,"key"). {()}
  [5] schema("AggregationRule") :- input("properties","clusterRoleSelectors","items","$ref","#/components/schemas/LabelSelector"), input("properties","clusterRoleSelectors","type","array"), input("type","object"). {()}
  [6] schema("UID") :- input("type","string"). {()}
  [7] schema("ManagedFieldsOperationType") :- input("type","string"). {()}
  [8] schema("LabelSelector") :- input("type","object"), input("properties","matchExpressions","items","$ref","#/components/schemas/LabelSelectorRequirement"), input("properties","matchExpressions","type","array"), input("properties","matchLabels","additionalProperties","type","string"), input("properties","matchLabels","type","object"). {()}
  [9] schema("Time"). {()}
  [10] schema("ClusterRole0") :- input("type","object"), input("properties","rules","type","array"), input("allOf",1,"required",3,"rules"), input("allOf",1,"required",2,"metadata"), input("allOf",1,"required",1,"kind"), input("allOf",1,"required",0,"apiVersion"), input("allOf",0,"$ref","#/components/schemas/ClusterRole"), input("properties","rules","default",0,"verbs",1,"list"), input("properties","rules","default",0,"verbs",0,"get"), input("properties","rules","default",0,"resources",1,"configs/status"), input("properties","rules","default",0,"resources",0,"configs"), input("properties","rules","default",0,"apiGroups",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","verbs","default",1,"list"), input("properties","rules","items",0,"properties","verbs","default",0,"get"), input("properties","rules","items",0,"properties","verbs","enum",0,1,"list"), input("properties","rules","items",0,"properties","verbs","enum",0,0,"get"), input("properties","rules","items",0,"properties","verbs","items",1,"enum",0,"list"), input("properties","rules","items",0,"properties","verbs","items",1,"type","string"), input("properties","rules","items",0,"properties","verbs","items",0,"enum",0,"get"), input("properties","rules","items",0,"properties","verbs","items",0,"type","string"), input("properties","rules","items",0,"properties","verbs","type","array"), input("properties","rules","items",0,"properties","resources","default",1,"configs/status"), input("properties","rules","items",0,"properties","resources","default",0,"configs"), input("properties","rules","items",0,"properties","resources","enum",0,1,"configs/status"), input("properties","rules","items",0,"properties","resources","enum",0,0,"configs"), input("properties","rules","items",0,"properties","resources","items",1,"enum",0,"configs/status"), input("properties","rules","items",0,"properties","resources","items",1,"type","string"), input("properties","rules","items",0,"properties","resources","items",0,"enum",0,"configs"), input("properties","rules","items",0,"properties","resources","items",0,"type","string"), input("properties","rules","items",0,"properties","resources","type","array"), input("properties","rules","items",0,"properties","apiGroups","default",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","enum",0,0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","items",0,"enum",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","items",0,"type","string"), input("properties","rules","items",0,"properties","apiGroups","type","array"), input("properties","rules","items",0,"required",2,"verbs"), input("properties","rules","items",0,"required",1,"resources"), input("properties","rules","items",0,"required",0,"apiGroups"), input("properties","rules","items",0,"type","object"), input("properties","metadata","properties","name","enum",0,"config-viewer-role"), input("properties","metadata","properties","name","type","string"), input("properties","metadata","required",0,"name"), input("properties","metadata","type","object"), input("properties","kind","enum",0,"ClusterRole"), input("properties","kind","type","string"), input("properties","apiVersion","enum",0,"rbac/v1"), input("properties","apiVersion","type","string"). {()}
  [11] schema("OwnerReference") :- input("type","object"), input("properties","kind","type","string"), input("properties","apiVersion","type","string"), input("properties","uid","$ref","#/components/schemas/UID"), input("properties","name","type","string"), input("properties","blockOwnerDeletion","nullable",true), input("properties","blockOwnerDeletion","type","boolean"), input("properties","controller","nullable",true), input("properties","controller","type","boolean"), input("required",3,"uid"), input("required",2,"name"), input("required",1,"kind"), input("required",0,"apiVersion"). {()}
  [12] schema("TypeMeta") :- input("type","object"), input("properties","kind","type","string"), input("properties","apiVersion","type","string"). {()}
  [13] schema("ManagedFieldsEntry") :- input("type","object"), input("properties","apiVersion","type","string"), input("properties","subresource","type","string"), input("properties","fieldsV1","nullable",true), input("properties","fieldsV1","allOf",0,"$ref","#/components/schemas/FieldsV1"), input("properties","fieldsType","type","string"), input("properties","time","nullable",true), input("properties","time","allOf",0,"$ref","#/components/schemas/Time"), input("properties","operation","$ref","#/components/schemas/ManagedFieldsOperationType"), input("properties","manager","type","string"). {()}
  [14] schema("ObjectMeta") :- input("type","object"), input("properties","managedFields","items","$ref","#/components/schemas/ManagedFieldsEntry"), input("properties","managedFields","type","array"), input("properties","finalizers","items","type","string"), input("properties","finalizers","type","array"), input("properties","ownerReferences","items","$ref","#/components/schemas/OwnerReference"), input("properties","ownerReferences","type","array"), input("properties","annotations","additionalProperties","type","string"), input("properties","annotations","type","object"), input("properties","labels","additionalProperties","type","string"), input("properties","labels","type","object"), input("properties","deletionGracePeriodSeconds","nullable",true), input("properties","deletionGracePeriodSeconds","maximum","int(\"9223372036854775807\")"), input("properties","deletionGracePeriodSeconds","minimum","int(\"-9223372036854775808\")"), input("properties","deletionGracePeriodSeconds","type","integer"), input("properties","deletionTimestamp","nullable",true), input("properties","deletionTimestamp","allOf",0,"$ref","#/components/schemas/Time"), input("properties","creationTimestamp","$ref","#/components/schemas/Time"), input("properties","generation","format","int64"), input("properties","generation","type","integer"), input("properties","resourceVersion","type","string"), input("properties","uid","$ref","#/components/schemas/UID"), input("properties","selfLink","type","string"), input("properties","namespace","type","string"), input("properties","generateName","type","string"), input("properties","name","type","string"). {()}
  [15] schema("PolicyRule") :- input("type","object"), input("properties","nonResourceURLs","items","type","string"), input("properties","nonResourceURLs","type","array"), input("properties","resourceNames","items","type","string"), input("properties","resourceNames","type","array"), input("properties","resources","items","type","string"), input("properties","resources","type","array"), input("properties","apiGroups","items","type","string"), input("properties","apiGroups","type","array"), input("properties","verbs","items","type","string"), input("properties","verbs","type","array"), input("required",0,"verbs"). {()}



Computing opt-sufficient subset...

S_M:
  schema("PolicyRule") :- input("type","object"), input("properties","nonResourceURLs","items","type","string"), input("properties","nonResourceURLs","type","array"), input("properties","resourceNames","items","type","string"), input("properties","resourceNames","type","array"), input("properties","resources","items","type","string"), input("properties","resources","type","array"), input("properties","apiGroups","items","type","string"), input("properties","apiGroups","type","array"), input("properties","verbs","items","type","string"), input("properties","verbs","type","array"), input("required",0,"verbs").
  schema("LabelSelectorRequirement") :- input("type","object"), input("properties","values","items","type","string"), input("properties","values","type","array"), input("properties","operator","$ref","#/components/schemas/LabelSelectorOperator"), input("properties","key","type","string"), input("required",1,"operator"), input("required",0,"key").
  schema("TypeMeta") :- input("type","object"), input("properties","kind","type","string"), input("properties","apiVersion","type","string").
  schema("LabelSelector") :- input("type","object"), input("properties","matchExpressions","items","$ref","#/components/schemas/LabelSelectorRequirement"), input("properties","matchExpressions","type","array"), input("properties","matchLabels","additionalProperties","type","string"), input("properties","matchLabels","type","object").
  schema("ManagedFieldsEntry") :- input("type","object"), input("properties","apiVersion","type","string"), input("properties","subresource","type","string"), input("properties","fieldsV1","nullable",true), input("properties","fieldsV1","allOf",0,"$ref","#/components/schemas/FieldsV1"), input("properties","fieldsType","type","string"), input("properties","time","nullable",true), input("properties","time","allOf",0,"$ref","#/components/schemas/Time"), input("properties","operation","$ref","#/components/schemas/ManagedFieldsOperationType"), input("properties","manager","type","string").
  schema("LabelSelectorOperator") :- input("type","string").
  schema("UID") :- input("type","string").
  schema("ManagedFieldsOperationType") :- input("type","string").
  schema("FieldsV1").
  schema("Time").
  schema("OwnerReference") :- input("type","object"), input("properties","kind","type","string"), input("properties","apiVersion","type","string"), input("properties","uid","$ref","#/components/schemas/UID"), input("properties","name","type","string"), input("properties","blockOwnerDeletion","nullable",true), input("properties","blockOwnerDeletion","type","boolean"), input("properties","controller","nullable",true), input("properties","controller","type","boolean"), input("required",3,"uid"), input("required",2,"name"), input("required",1,"kind"), input("required",0,"apiVersion").
  schema("Instance") :- input("type","object"), input("properties","objects","properties","obj0","$ref","#/components/schemas/ClusterRole0"), input("properties","objects","required",0,"obj0"), input("properties","objects","type","object"), input("required",0,"objects").
  schema("ClusterRole") :- input("type","object"), input("allOf",0,"$ref","#/components/schemas/TypeMeta"), input("properties","aggregationRule","nullable",true), input("properties","aggregationRule","allOf",0,"$ref","#/components/schemas/AggregationRule"), input("properties","aggregationRule","type","object"), input("properties","rules","items","$ref","#/components/schemas/PolicyRule"), input("properties","rules","type","array"), input("properties","metadata","$ref","#/components/schemas/ObjectMeta").
  schema("ClusterRole0") :- input("type","object"), input("properties","rules","type","array"), input("allOf",1,"required",3,"rules"), input("allOf",1,"required",2,"metadata"), input("allOf",1,"required",1,"kind"), input("allOf",1,"required",0,"apiVersion"), input("allOf",0,"$ref","#/components/schemas/ClusterRole"), input("properties","rules","default",0,"verbs",1,"list"), input("properties","rules","default",0,"verbs",0,"get"), input("properties","rules","default",0,"resources",1,"configs/status"), input("properties","rules","default",0,"resources",0,"configs"), input("properties","rules","default",0,"apiGroups",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","verbs","default",1,"list"), input("properties","rules","items",0,"properties","verbs","default",0,"get"), input("properties","rules","items",0,"properties","verbs","enum",0,1,"list"), input("properties","rules","items",0,"properties","verbs","enum",0,0,"get"), input("properties","rules","items",0,"properties","verbs","items",1,"enum",0,"list"), input("properties","rules","items",0,"properties","verbs","items",1,"type","string"), input("properties","rules","items",0,"properties","verbs","items",0,"enum",0,"get"), input("properties","rules","items",0,"properties","verbs","items",0,"type","string"), input("properties","rules","items",0,"properties","verbs","type","array"), input("properties","rules","items",0,"properties","resources","default",1,"configs/status"), input("properties","rules","items",0,"properties","resources","default",0,"configs"), input("properties","rules","items",0,"properties","resources","enum",0,1,"configs/status"), input("properties","rules","items",0,"properties","resources","enum",0,0,"configs"), input("properties","rules","items",0,"properties","resources","items",1,"enum",0,"configs/status"), input("properties","rules","items",0,"properties","resources","items",1,"type","string"), input("properties","rules","items",0,"properties","resources","items",0,"enum",0,"configs"), input("properties","rules","items",0,"properties","resources","items",0,"type","string"), input("properties","rules","items",0,"properties","resources","type","array"), input("properties","rules","items",0,"properties","apiGroups","default",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","enum",0,0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","items",0,"enum",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","items",0,"type","string"), input("properties","rules","items",0,"properties","apiGroups","type","array"), input("properties","rules","items",0,"required",2,"verbs"), input("properties","rules","items",0,"required",1,"resources"), input("properties","rules","items",0,"required",0,"apiGroups"), input("properties","rules","items",0,"type","object"), input("properties","metadata","properties","name","enum",0,"config-viewer-role"), input("properties","metadata","properties","name","type","string"), input("properties","metadata","required",0,"name"), input("properties","metadata","type","object"), input("properties","kind","enum",0,"ClusterRole"), input("properties","kind","type","string"), input("properties","apiVersion","enum",0,"rbac/v1"), input("properties","apiVersion","type","string").
  schema("AggregationRule") :- input("properties","clusterRoleSelectors","items","$ref","#/components/schemas/LabelSelector"), input("properties","clusterRoleSelectors","type","array"), input("type","object").
  schema("ObjectMeta") :- input("type","object"), input("properties","managedFields","items","$ref","#/components/schemas/ManagedFieldsEntry"), input("properties","managedFields","type","array"), input("properties","finalizers","items","type","string"), input("properties","finalizers","type","array"), input("properties","ownerReferences","items","$ref","#/components/schemas/OwnerReference"), input("properties","ownerReferences","type","array"), input("properties","annotations","additionalProperties","type","string"), input("properties","annotations","type","object"), input("properties","labels","additionalProperties","type","string"), input("properties","labels","type","object"), input("properties","deletionGracePeriodSeconds","nullable",true), input("properties","deletionGracePeriodSeconds","maximum","int(\"9223372036854775807\")"), input("properties","deletionGracePeriodSeconds","minimum","int(\"-9223372036854775808\")"), input("properties","deletionGracePeriodSeconds","type","integer"), input("properties","deletionTimestamp","nullable",true), input("properties","deletionTimestamp","allOf",0,"$ref","#/components/schemas/Time"), input("properties","creationTimestamp","$ref","#/components/schemas/Time"), input("properties","generation","format","int64"), input("properties","generation","type","integer"), input("properties","resourceVersion","type","string"), input("properties","uid","$ref","#/components/schemas/UID"), input("properties","selfLink","type","string"), input("properties","namespace","type","string"), input("properties","generateName","type","string"), input("properties","name","type","string").


Solving...

schema("ObjectMeta") :- input("type","object"), input("properties","managedFields","items","$ref","#/components/schemas/ManagedFieldsEntry"), input("properties","managedFields","type","array"), input("properties","finalizers","items","type","string"), input("properties","finalizers","type","array"), input("properties","ownerReferences","items","$ref","#/components/schemas/OwnerReference"), input("properties","ownerReferences","type","array"), input("properties","annotations","additionalProperties","type","string"), input("properties","annotations","type","object"), input("properties","labels","additionalProperties","type","string"), input("properties","labels","type","object"), input("properties","deletionGracePeriodSeconds","nullable",true), input("properties","deletionGracePeriodSeconds","maximum","int(\"9223372036854775807\")"), input("properties","deletionGracePeriodSeconds","minimum","int(\"-9223372036854775808\")"), input("properties","deletionGracePeriodSeconds","type","integer"), input("properties","deletionTimestamp","nullable",true), input("properties","deletionTimestamp","allOf",0,"$ref","#/components/schemas/Time"), input("properties","creationTimestamp","$ref","#/components/schemas/Time"), input("properties","generation","format","int64"), input("properties","generation","type","integer"), input("properties","resourceVersion","type","string"), input("properties","uid","$ref","#/components/schemas/UID"), input("properties","selfLink","type","string"), input("properties","namespace","type","string"), input("properties","generateName","type","string"), input("properties","name","type","string").
schema("AggregationRule") :- input("properties","clusterRoleSelectors","items","$ref","#/components/schemas/LabelSelector"), input("properties","clusterRoleSelectors","type","array"), input("type","object").
schema("ClusterRole0") :- input("type","object"), input("properties","rules","type","array"), input("allOf",1,"required",3,"rules"), input("allOf",1,"required",2,"metadata"), input("allOf",1,"required",1,"kind"), input("allOf",1,"required",0,"apiVersion"), input("allOf",0,"$ref","#/components/schemas/ClusterRole"), input("properties","rules","default",0,"verbs",1,"list"), input("properties","rules","default",0,"verbs",0,"get"), input("properties","rules","default",0,"resources",1,"configs/status"), input("properties","rules","default",0,"resources",0,"configs"), input("properties","rules","default",0,"apiGroups",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","verbs","default",1,"list"), input("properties","rules","items",0,"properties","verbs","default",0,"get"), input("properties","rules","items",0,"properties","verbs","enum",0,1,"list"), input("properties","rules","items",0,"properties","verbs","enum",0,0,"get"), input("properties","rules","items",0,"properties","verbs","items",1,"enum",0,"list"), input("properties","rules","items",0,"properties","verbs","items",1,"type","string"), input("properties","rules","items",0,"properties","verbs","items",0,"enum",0,"get"), input("properties","rules","items",0,"properties","verbs","items",0,"type","string"), input("properties","rules","items",0,"properties","verbs","type","array"), input("properties","rules","items",0,"properties","resources","default",1,"configs/status"), input("properties","rules","items",0,"properties","resources","default",0,"configs"), input("properties","rules","items",0,"properties","resources","enum",0,1,"configs/status"), input("properties","rules","items",0,"properties","resources","enum",0,0,"configs"), input("properties","rules","items",0,"properties","resources","items",1,"enum",0,"configs/status"), input("properties","rules","items",0,"properties","resources","items",1,"type","string"), input("properties","rules","items",0,"properties","resources","items",0,"enum",0,"configs"), input("properties","rules","items",0,"properties","resources","items",0,"type","string"), input("properties","rules","items",0,"properties","resources","type","array"), input("properties","rules","items",0,"properties","apiGroups","default",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","enum",0,0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","items",0,"enum",0,"machine.crit.sh"), input("properties","rules","items",0,"properties","apiGroups","items",0,"type","string"), input("properties","rules","items",0,"properties","apiGroups","type","array"), input("properties","rules","items",0,"required",2,"verbs"), input("properties","rules","items",0,"required",1,"resources"), input("properties","rules","items",0,"required",0,"apiGroups"), input("properties","rules","items",0,"type","object"), input("properties","metadata","properties","name","enum",0,"config-viewer-role"), input("properties","metadata","properties","name","type","string"), input("properties","metadata","required",0,"name"), input("properties","metadata","type","object"), input("properties","kind","enum",0,"ClusterRole"), input("properties","kind","type","string"), input("properties","apiVersion","enum",0,"rbac/v1"), input("properties","apiVersion","type","string").
schema("ClusterRole") :- input("type","object"), input("allOf",0,"$ref","#/components/schemas/TypeMeta"), input("properties","aggregationRule","nullable",true), input("properties","aggregationRule","allOf",0,"$ref","#/components/schemas/AggregationRule"), input("properties","aggregationRule","type","object"), input("properties","rules","items","$ref","#/components/schemas/PolicyRule"), input("properties","rules","type","array"), input("properties","metadata","$ref","#/components/schemas/ObjectMeta").
schema("Instance") :- input("type","object"), input("properties","objects","properties","obj0","$ref","#/components/schemas/ClusterRole0"), input("properties","objects","required",0,"obj0"), input("properties","objects","type","object"), input("required",0,"objects").
schema("OwnerReference") :- input("type","object"), input("properties","kind","type","string"), input("properties","apiVersion","type","string"), input("properties","uid","$ref","#/components/schemas/UID"), input("properties","name","type","string"), input("properties","blockOwnerDeletion","nullable",true), input("properties","blockOwnerDeletion","type","boolean"), input("properties","controller","nullable",true), input("properties","controller","type","boolean"), input("required",3,"uid"), input("required",2,"name"), input("required",1,"kind"), input("required",0,"apiVersion").
schema("Time").
schema("FieldsV1").
schema("ManagedFieldsOperationType") :- input("type","string").
schema("UID") :- input("type","string").
schema("LabelSelectorOperator") :- input("type","string").
schema("ManagedFieldsEntry") :- input("type","object"), input("properties","apiVersion","type","string"), input("properties","subresource","type","string"), input("properties","fieldsV1","nullable",true), input("properties","fieldsV1","allOf",0,"$ref","#/components/schemas/FieldsV1"), input("properties","fieldsType","type","string"), input("properties","time","nullable",true), input("properties","time","allOf",0,"$ref","#/components/schemas/Time"), input("properties","operation","$ref","#/components/schemas/ManagedFieldsOperationType"), input("properties","manager","type","string").
schema("LabelSelector") :- input("type","object"), input("properties","matchExpressions","items","$ref","#/components/schemas/LabelSelectorRequirement"), input("properties","matchExpressions","type","array"), input("properties","matchLabels","additionalProperties","type","string"), input("properties","matchLabels","type","object").
schema("TypeMeta") :- input("type","object"), input("properties","kind","type","string"), input("properties","apiVersion","type","string").
schema("LabelSelectorRequirement") :- input("type","object"), input("properties","values","items","type","string"), input("properties","values","type","array"), input("properties","operator","$ref","#/components/schemas/LabelSelectorOperator"), input("properties","key","type","string"), input("required",1,"operator"), input("required",0,"key").
schema("PolicyRule") :- input("type","object"), input("properties","nonResourceURLs","items","type","string"), input("properties","nonResourceURLs","type","array"), input("properties","resourceNames","items","type","string"), input("properties","resourceNames","type","array"), input("properties","resources","items","type","string"), input("properties","resources","type","array"), input("properties","apiGroups","items","type","string"), input("properties","apiGroups","type","array"), input("properties","verbs","items","type","string"), input("properties","verbs","type","array"), input("required",0,"verbs").


{
  "Length": 15858,
  "Noisy Example Penalty": 0,
  "Uncovered Examples": [ ],
  "Final Semi-decomposable Representation": [ ]
}