package templates
// Generated by cue.

info: {
	title:   *"Generated by cue." | string
	version: *"no version" | string
}

#AggregationRule: {
	clusterRoleSelectors?: [...#LabelSelector]
	...
}
#ClusterRole: #TypeMeta & {
	aggregationRule?: null | #AggregationRule
	metadata?:        #ObjectMeta
	rules?: [...#PolicyRule]
	...
}
#ClusterRole0: #ClusterRole & {
	apiVersion: _
	kind:       _
	metadata:   _
	rules:      _
	...
} & {
	apiVersion?: "rbac/v1"
	kind?:       "ClusterRole"
	metadata?: {
		name: "config-viewer-role"
		...
	}
	rules?: [{
		apiGroups: {
			"0": "machine.crit.sh"
			...
		} & ["machine.crit.sh"] | *["machine.crit.sh"]
		resources: {
			"0": "configs"
			"1": "configs/status"
			...
		} & ["configs", "configs/status"] | *["configs", "configs/status"]
		verbs: {
			"0": "get"
			"1": "list"
			...
		} & ["get", "list"] | *["get", "list"]
		...
	}] | *[{
		apiGroups: ["machine.crit.sh"]
		resources: ["configs", "configs/status"]
		verbs: ["get", "list"]
		...
	}]
	...
}
#FieldsV1: _
#Instance: {
	objects: {
		obj0: #ClusterRole0
		...
	}
	...
}
#LabelSelector: {
	matchExpressions?: [...#LabelSelectorRequirement]
	matchLabels?: [string]: string
	...
}
#LabelSelectorOperator: string
#LabelSelectorRequirement: {
	key:      string
	operator: #LabelSelectorOperator
	values?: [...string]
	...
}
#ManagedFieldsEntry: {
	apiVersion?:  string
	fieldsType?:  string
	fieldsV1?:    null | #FieldsV1
	manager?:     string
	operation?:   #ManagedFieldsOperationType
	subresource?: string
	time?:        null | #Time
	...
}
#ManagedFieldsOperationType: string
#ObjectMeta: {
	annotations?: [string]: string
	creationTimestamp?:          #Time
	deletionGracePeriodSeconds?: null | int & <=9223372036854775807 & >=-9223372036854775808
	deletionTimestamp?:          null | #Time
	finalizers?: [...string]
	generateName?: string
	generation?:   int
	labels?: [string]: string
	managedFields?: [...#ManagedFieldsEntry]
	name?:      string
	namespace?: string
	ownerReferences?: [...#OwnerReference]
	resourceVersion?: string
	selfLink?:        string
	uid?:             #UID
	...
}
#OwnerReference: {
	apiVersion:          string
	blockOwnerDeletion?: null | bool
	controller?:         null | bool
	kind:                string
	name:                string
	uid:                 #UID
	...
}
#PolicyRule: {
	apiGroups?: [...string]
	nonResourceURLs?: [...string]
	resourceNames?: [...string]
	resources?: [...string]
	verbs: [...string]
	...
}
#Time: _
#TypeMeta: {
	apiVersion?: string
	kind?:       string
	...
}
#UID: string
