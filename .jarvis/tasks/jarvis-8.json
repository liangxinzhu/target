{
    "openapi": "3.0.0",
    "info": {
        "title": "Generated by cue.",
        "version": "no version"
    },
    "paths": {},
    "components": {
        "schemas": {
            "AWSElasticBlockStoreVolumeSource": {
                "type": "object",
                "required": [
                    "volumeID"
                ],
                "properties": {
                    "volumeID": {
                        "type": "string"
                    },
                    "fsType": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                }
            },
            "Affinity": {
                "type": "object",
                "properties": {
                    "nodeAffinity": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NodeAffinity"
                            }
                        ],
                        "nullable": true
                    },
                    "podAffinity": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PodAffinity"
                            }
                        ],
                        "nullable": true
                    },
                    "podAntiAffinity": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PodAntiAffinity"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "AppArmorProfile": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/AppArmorProfileType"
                    },
                    "localhostProfile": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "AppArmorProfileType": {
                "type": "string"
            },
            "AzureDiskVolumeSource": {
                "type": "object",
                "required": [
                    "diskName",
                    "diskURI"
                ],
                "properties": {
                    "diskName": {
                        "type": "string"
                    },
                    "diskURI": {
                        "type": "string"
                    },
                    "cachingMode": {
                        "type": "string",
                        "nullable": true
                    },
                    "fsType": {
                        "type": "string",
                        "nullable": true
                    },
                    "readOnly": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "AzureFileVolumeSource": {
                "type": "object",
                "required": [
                    "secretName",
                    "shareName"
                ],
                "properties": {
                    "secretName": {
                        "type": "string"
                    },
                    "shareName": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                }
            },
            "CSIVolumeSource": {
                "type": "object",
                "required": [
                    "driver"
                ],
                "properties": {
                    "driver": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "fsType": {
                        "type": "string",
                        "nullable": true
                    },
                    "volumeAttributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "nodePublishSecretRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalObjectReference"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Capabilities": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Capability"
                        }
                    },
                    "drop": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Capability"
                        }
                    }
                }
            },
            "Capability": {
                "type": "string"
            },
            "CephFSVolumeSource": {
                "type": "object",
                "required": [
                    "monitors"
                ],
                "properties": {
                    "monitors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "path": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "secretFile": {
                        "type": "string"
                    },
                    "secretRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalObjectReference"
                            }
                        ],
                        "nullable": true
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                }
            },
            "CinderVolumeSource": {
                "type": "object",
                "required": [
                    "volumeID"
                ],
                "properties": {
                    "volumeID": {
                        "type": "string"
                    },
                    "fsType": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "secretRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalObjectReference"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "ClaimSource": {
                "type": "object",
                "properties": {
                    "resourceClaimName": {
                        "type": "string",
                        "nullable": true
                    },
                    "resourceClaimTemplateName": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ClusterTrustBundleProjection": {
                "type": "object",
                "required": [
                    "path"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "signerName": {
                        "type": "string",
                        "nullable": true
                    },
                    "labelSelector": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LabelSelector"
                            }
                        ],
                        "nullable": true
                    },
                    "optional": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    }
                }
            },
            "ConditionStatus": {
                "type": "string"
            },
            "ConfigMapEnvSource": {
                "type": "object",
                "properties": {
                    "optional": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LocalObjectReference"
                    }
                ]
            },
            "ConfigMapKeySelector": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "optional": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LocalObjectReference"
                    },
                    {
                        "required": [
                            "key"
                        ]
                    }
                ]
            },
            "ConfigMapProjection": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeyToPath"
                        }
                    },
                    "optional": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LocalObjectReference"
                    }
                ]
            },
            "ConfigMapVolumeSource": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeyToPath"
                        }
                    },
                    "defaultMode": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    },
                    "optional": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LocalObjectReference"
                    }
                ]
            },
            "Container": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "command": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "workingDir": {
                        "type": "string"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerPort"
                        }
                    },
                    "envFrom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnvFromSource"
                        }
                    },
                    "env": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnvVar"
                        }
                    },
                    "resources": {
                        "$ref": "#/components/schemas/ResourceRequirements"
                    },
                    "resizePolicy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerResizePolicy"
                        }
                    },
                    "restartPolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "volumeMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VolumeMount"
                        }
                    },
                    "volumeDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VolumeDevice"
                        }
                    },
                    "livenessProbe": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Probe"
                            }
                        ],
                        "nullable": true
                    },
                    "readinessProbe": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Probe"
                            }
                        ],
                        "nullable": true
                    },
                    "startupProbe": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Probe"
                            }
                        ],
                        "nullable": true
                    },
                    "lifecycle": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Lifecycle"
                            }
                        ],
                        "nullable": true
                    },
                    "terminationMessagePath": {
                        "type": "string"
                    },
                    "terminationMessagePolicy": {
                        "$ref": "#/components/schemas/TerminationMessagePolicy"
                    },
                    "imagePullPolicy": {
                        "$ref": "#/components/schemas/PullPolicy"
                    },
                    "securityContext": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SecurityContext"
                            }
                        ],
                        "nullable": true
                    },
                    "stdin": {
                        "type": "boolean"
                    },
                    "stdinOnce": {
                        "type": "boolean"
                    },
                    "tty": {
                        "type": "boolean"
                    }
                }
            },
            "ContainerPort": {
                "type": "object",
                "required": [
                    "containerPort"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "hostPort": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "containerPort": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "protocol": {
                        "$ref": "#/components/schemas/Protocol"
                    },
                    "hostIP": {
                        "type": "string"
                    }
                }
            },
            "ContainerResizePolicy": {
                "type": "object",
                "required": [
                    "resourceName",
                    "restartPolicy"
                ],
                "properties": {
                    "resourceName": {
                        "$ref": "#/components/schemas/ResourceName"
                    },
                    "restartPolicy": {
                        "$ref": "#/components/schemas/ResourceResizeRestartPolicy"
                    }
                }
            },
            "ContainerState": {
                "type": "object",
                "properties": {
                    "waiting": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContainerStateWaiting"
                            }
                        ],
                        "nullable": true
                    },
                    "running": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContainerStateRunning"
                            }
                        ],
                        "nullable": true
                    },
                    "terminated": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContainerStateTerminated"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "ContainerStateRunning": {
                "type": "object",
                "properties": {
                    "startedAt": {
                        "$ref": "#/components/schemas/Time"
                    }
                }
            },
            "ContainerStateTerminated": {
                "type": "object",
                "required": [
                    "exitCode"
                ],
                "properties": {
                    "exitCode": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "signal": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "startedAt": {
                        "$ref": "#/components/schemas/Time"
                    },
                    "finishedAt": {
                        "$ref": "#/components/schemas/Time"
                    },
                    "containerID": {
                        "type": "string"
                    }
                }
            },
            "ContainerStateWaiting": {
                "type": "object",
                "properties": {
                    "reason": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ContainerStatus": {
                "type": "object",
                "required": [
                    "name",
                    "ready",
                    "restartCount",
                    "image",
                    "imageID"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "state": {
                        "$ref": "#/components/schemas/ContainerState"
                    },
                    "lastState": {
                        "$ref": "#/components/schemas/ContainerState"
                    },
                    "ready": {
                        "type": "boolean"
                    },
                    "restartCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "image": {
                        "type": "string"
                    },
                    "imageID": {
                        "type": "string"
                    },
                    "containerID": {
                        "type": "string"
                    },
                    "started": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "allocatedResources": {
                        "$ref": "#/components/schemas/ResourceList"
                    },
                    "resources": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResourceRequirements"
                            }
                        ],
                        "nullable": true
                    },
                    "volumeMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VolumeMountStatus"
                        }
                    }
                }
            },
            "DNSPolicy": {
                "type": "string"
            },
            "DownwardAPIProjection": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DownwardAPIVolumeFile"
                        }
                    }
                }
            },
            "DownwardAPIVolumeFile": {
                "type": "object",
                "required": [
                    "path"
                ],
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "fieldRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ObjectFieldSelector"
                            }
                        ],
                        "nullable": true
                    },
                    "resourceFieldRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResourceFieldSelector"
                            }
                        ],
                        "nullable": true
                    },
                    "mode": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    }
                }
            },
            "DownwardAPIVolumeSource": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DownwardAPIVolumeFile"
                        }
                    },
                    "defaultMode": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    }
                }
            },
            "EmptyDirVolumeSource": {
                "type": "object",
                "properties": {
                    "medium": {
                        "$ref": "#/components/schemas/StorageMedium"
                    },
                    "sizeLimit": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Quantity"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "EnvFromSource": {
                "type": "object",
                "properties": {
                    "prefix": {
                        "type": "string"
                    },
                    "configMapRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConfigMapEnvSource"
                            }
                        ],
                        "nullable": true
                    },
                    "secretRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SecretEnvSource"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "EnvVar": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "valueFrom": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EnvVarSource"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "EnvVarSource": {
                "type": "object",
                "properties": {
                    "fieldRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ObjectFieldSelector"
                            }
                        ],
                        "nullable": true
                    },
                    "resourceFieldRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ResourceFieldSelector"
                            }
                        ],
                        "nullable": true
                    },
                    "configMapKeyRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConfigMapKeySelector"
                            }
                        ],
                        "nullable": true
                    },
                    "secretKeyRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SecretKeySelector"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "EphemeralContainer": {
                "type": "object",
                "properties": {
                    "targetContainerName": {
                        "type": "string"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/EphemeralContainerCommon"
                    }
                ]
            },
            "EphemeralContainerCommon": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "command": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "workingDir": {
                        "type": "string"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerPort"
                        }
                    },
                    "envFrom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnvFromSource"
                        }
                    },
                    "env": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EnvVar"
                        }
                    },
                    "resources": {
                        "$ref": "#/components/schemas/ResourceRequirements"
                    },
                    "resizePolicy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerResizePolicy"
                        }
                    },
                    "restartPolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "volumeMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VolumeMount"
                        }
                    },
                    "volumeDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VolumeDevice"
                        }
                    },
                    "livenessProbe": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Probe"
                            }
                        ],
                        "nullable": true
                    },
                    "readinessProbe": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Probe"
                            }
                        ],
                        "nullable": true
                    },
                    "startupProbe": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Probe"
                            }
                        ],
                        "nullable": true
                    },
                    "lifecycle": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Lifecycle"
                            }
                        ],
                        "nullable": true
                    },
                    "terminationMessagePath": {
                        "type": "string"
                    },
                    "terminationMessagePolicy": {
                        "$ref": "#/components/schemas/TerminationMessagePolicy"
                    },
                    "imagePullPolicy": {
                        "$ref": "#/components/schemas/PullPolicy"
                    },
                    "securityContext": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SecurityContext"
                            }
                        ],
                        "nullable": true
                    },
                    "stdin": {
                        "type": "boolean"
                    },
                    "stdinOnce": {
                        "type": "boolean"
                    },
                    "tty": {
                        "type": "boolean"
                    }
                }
            },
            "EphemeralVolumeSource": {
                "type": "object",
                "properties": {
                    "volumeClaimTemplate": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PersistentVolumeClaimTemplate"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "ExecAction": {
                "type": "object",
                "properties": {
                    "command": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "FCVolumeSource": {
                "type": "object",
                "properties": {
                    "targetWWNs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lun": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    },
                    "fsType": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "wwids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "FieldsV1": {},
            "FlexVolumeSource": {
                "type": "object",
                "required": [
                    "driver"
                ],
                "properties": {
                    "driver": {
                        "type": "string"
                    },
                    "fsType": {
                        "type": "string"
                    },
                    "secretRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalObjectReference"
                            }
                        ],
                        "nullable": true
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "options": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "FlockerVolumeSource": {
                "type": "object",
                "properties": {
                    "datasetName": {
                        "type": "string"
                    },
                    "datasetUUID": {
                        "type": "string"
                    }
                }
            },
            "GCEPersistentDiskVolumeSource": {
                "type": "object",
                "required": [
                    "pdName"
                ],
                "properties": {
                    "pdName": {
                        "type": "string"
                    },
                    "fsType": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                }
            },
            "GRPCAction": {
                "type": "object",
                "required": [
                    "port"
                ],
                "properties": {
                    "port": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "service": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "GitRepoVolumeSource": {
                "type": "object",
                "required": [
                    "repository"
                ],
                "properties": {
                    "repository": {
                        "type": "string"
                    },
                    "revision": {
                        "type": "string"
                    },
                    "directory": {
                        "type": "string"
                    }
                }
            },
            "GlusterfsVolumeSource": {
                "type": "object",
                "required": [
                    "endpoints",
                    "path"
                ],
                "properties": {
                    "endpoints": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                }
            },
            "HTTPGetAction": {
                "type": "object",
                "required": [
                    "port"
                ],
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "port": {
                        "$ref": "#/components/schemas/IntOrString"
                    },
                    "host": {
                        "type": "string"
                    },
                    "scheme": {
                        "$ref": "#/components/schemas/URIScheme"
                    },
                    "httpHeaders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HTTPHeader"
                        }
                    }
                }
            },
            "HTTPHeader": {
                "type": "object",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "HostAlias": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "HostIP": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string"
                    }
                }
            },
            "HostPathVolumeSource": {
                "type": "object",
                "required": [
                    "path"
                ],
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ISCSIVolumeSource": {
                "type": "object",
                "required": [
                    "targetPortal",
                    "iqn",
                    "lun"
                ],
                "properties": {
                    "targetPortal": {
                        "type": "string"
                    },
                    "iqn": {
                        "type": "string"
                    },
                    "lun": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "iscsiInterface": {
                        "type": "string"
                    },
                    "fsType": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "portals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "chapAuthDiscovery": {
                        "type": "boolean"
                    },
                    "chapAuthSession": {
                        "type": "boolean"
                    },
                    "secretRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalObjectReference"
                            }
                        ],
                        "nullable": true
                    },
                    "initiatorName": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Instance": {
                "type": "object",
                "required": [
                    "objects"
                ],
                "properties": {
                    "objects": {
                        "type": "object",
                        "required": [
                            "obj0"
                        ],
                        "properties": {
                            "obj0": {
                                "$ref": "#/components/schemas/Pod0"
                            }
                        }
                    }
                }
            },
            "IntOrString": {},
            "Jarvis": {
                "type": "object",
                "required": [
                    "instance"
                ],
                "properties": {
                    "instance": {
                        "$ref": "#/components/schemas/Instance"
                    }
                }
            },
            "KeyToPath": {
                "type": "object",
                "required": [
                    "key",
                    "path"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "mode": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    }
                }
            },
            "LabelSelector": {
                "type": "object",
                "properties": {
                    "matchLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "matchExpressions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LabelSelectorRequirement"
                        }
                    }
                }
            },
            "LabelSelectorOperator": {
                "type": "string"
            },
            "LabelSelectorRequirement": {
                "type": "object",
                "required": [
                    "key",
                    "operator"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "operator": {
                        "$ref": "#/components/schemas/LabelSelectorOperator"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Lifecycle": {
                "type": "object",
                "properties": {
                    "postStart": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LifecycleHandler"
                            }
                        ],
                        "nullable": true
                    },
                    "preStop": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LifecycleHandler"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "LifecycleHandler": {
                "type": "object",
                "properties": {
                    "exec": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExecAction"
                            }
                        ],
                        "nullable": true
                    },
                    "httpGet": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HTTPGetAction"
                            }
                        ],
                        "nullable": true
                    },
                    "tcpSocket": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TCPSocketAction"
                            }
                        ],
                        "nullable": true
                    },
                    "sleep": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SleepAction"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "LocalObjectReference": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ManagedFieldsEntry": {
                "type": "object",
                "properties": {
                    "manager": {
                        "type": "string"
                    },
                    "operation": {
                        "$ref": "#/components/schemas/ManagedFieldsOperationType"
                    },
                    "apiVersion": {
                        "type": "string"
                    },
                    "time": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Time"
                            }
                        ],
                        "nullable": true
                    },
                    "fieldsType": {
                        "type": "string"
                    },
                    "fieldsV1": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FieldsV1"
                            }
                        ],
                        "nullable": true
                    },
                    "subresource": {
                        "type": "string"
                    }
                }
            },
            "ManagedFieldsOperationType": {
                "type": "string"
            },
            "NFSVolumeSource": {
                "type": "object",
                "required": [
                    "server",
                    "path"
                ],
                "properties": {
                    "server": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                }
            },
            "NodeAffinity": {
                "type": "object",
                "properties": {
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NodeSelector"
                            }
                        ],
                        "nullable": true
                    },
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PreferredSchedulingTerm"
                        }
                    }
                }
            },
            "NodeSelector": {
                "type": "object",
                "required": [
                    "nodeSelectorTerms"
                ],
                "properties": {
                    "nodeSelectorTerms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeSelectorTerm"
                        }
                    }
                }
            },
            "NodeSelectorOperator": {
                "type": "string"
            },
            "NodeSelectorRequirement": {
                "type": "object",
                "required": [
                    "key",
                    "operator"
                ],
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "operator": {
                        "$ref": "#/components/schemas/NodeSelectorOperator"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "NodeSelectorTerm": {
                "type": "object",
                "properties": {
                    "matchExpressions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeSelectorRequirement"
                        }
                    },
                    "matchFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodeSelectorRequirement"
                        }
                    }
                }
            },
            "OSName": {
                "type": "string"
            },
            "ObjectFieldSelector": {
                "type": "object",
                "required": [
                    "fieldPath"
                ],
                "properties": {
                    "apiVersion": {
                        "type": "string"
                    },
                    "fieldPath": {
                        "type": "string"
                    }
                }
            },
            "ObjectMeta": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "generateName": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "uid": {
                        "$ref": "#/components/schemas/UID"
                    },
                    "resourceVersion": {
                        "type": "string"
                    },
                    "generation": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "creationTimestamp": {
                        "$ref": "#/components/schemas/Time"
                    },
                    "deletionTimestamp": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Time"
                            }
                        ],
                        "nullable": true
                    },
                    "deletionGracePeriodSeconds": {
                        "type": "integer",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ownerReferences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OwnerReference"
                        }
                    },
                    "finalizers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "managedFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ManagedFieldsEntry"
                        }
                    }
                }
            },
            "OwnerReference": {
                "type": "object",
                "required": [
                    "apiVersion",
                    "kind",
                    "name",
                    "uid"
                ],
                "properties": {
                    "apiVersion": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "uid": {
                        "$ref": "#/components/schemas/UID"
                    },
                    "controller": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "blockOwnerDeletion": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "PersistentVolumeAccessMode": {
                "type": "string"
            },
            "PersistentVolumeClaimSpec": {
                "type": "object",
                "properties": {
                    "accessModes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PersistentVolumeAccessMode"
                        }
                    },
                    "selector": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LabelSelector"
                            }
                        ],
                        "nullable": true
                    },
                    "resources": {
                        "$ref": "#/components/schemas/VolumeResourceRequirements"
                    },
                    "volumeName": {
                        "type": "string"
                    },
                    "storageClassName": {
                        "type": "string",
                        "nullable": true
                    },
                    "volumeMode": {
                        "type": "string",
                        "nullable": true
                    },
                    "dataSource": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypedLocalObjectReference"
                            }
                        ],
                        "nullable": true
                    },
                    "dataSourceRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypedObjectReference"
                            }
                        ],
                        "nullable": true
                    },
                    "volumeAttributesClassName": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PersistentVolumeClaimTemplate": {
                "type": "object",
                "required": [
                    "spec"
                ],
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ObjectMeta"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/PersistentVolumeClaimSpec"
                    }
                }
            },
            "PersistentVolumeClaimVolumeSource": {
                "type": "object",
                "required": [
                    "claimName"
                ],
                "properties": {
                    "claimName": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                }
            },
            "PhotonPersistentDiskVolumeSource": {
                "type": "object",
                "required": [
                    "pdID"
                ],
                "properties": {
                    "pdID": {
                        "type": "string"
                    },
                    "fsType": {
                        "type": "string"
                    }
                }
            },
            "Pod": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/ObjectMeta"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/PodSpec"
                    },
                    "status": {
                        "$ref": "#/components/schemas/PodStatus"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TypeMeta"
                    }
                ]
            },
            "Pod0": {
                "type": "object",
                "properties": {
                    "apiVersion": {
                        "type": "string",
                        "enum": [
                            "v1"
                        ]
                    },
                    "kind": {
                        "type": "string",
                        "enum": [
                            "Pod"
                        ]
                    },
                    "metadata": {
                        "type": "object",
                        "required": [
                            "name"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "enum": [
                                    "pulsar-admin"
                                ]
                            }
                        }
                    },
                    "spec": {
                        "type": "object",
                        "required": [
                            "containers"
                        ],
                        "properties": {
                            "containers": {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "object",
                                        "required": [
                                            "name",
                                            "image",
                                            "command",
                                            "args",
                                            "env",
                                            "resources"
                                        ],
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "enum": [
                                                    "pulsar-admin"
                                                ]
                                            },
                                            "image": {
                                                "type": "string",
                                                "enum": [
                                                    "apachepulsar/pulsar:latest"
                                                ]
                                            },
                                            "command": {
                                                "type": "array",
                                                "items": [
                                                    {
                                                        "type": "string",
                                                        "enum": [
                                                            "/bin/bash"
                                                        ]
                                                    }
                                                ],
                                                "enum": [
                                                    [
                                                        "/bin/bash"
                                                    ]
                                                ],
                                                "default": [
                                                    "/bin/bash"
                                                ]
                                            },
                                            "args": {
                                                "type": "array",
                                                "items": [
                                                    {
                                                        "type": "string",
                                                        "enum": [
                                                            "-c"
                                                        ]
                                                    },
                                                    {
                                                        "type": "string",
                                                        "enum": [
                                                            "bin/pulsar-admin"
                                                        ]
                                                    }
                                                ],
                                                "enum": [
                                                    [
                                                        "-c",
                                                        "bin/pulsar-admin"
                                                    ]
                                                ],
                                                "default": [
                                                    "-c",
                                                    "bin/pulsar-admin"
                                                ]
                                            },
                                            "env": {
                                                "type": "array",
                                                "items": [
                                                    {
                                                        "type": "object",
                                                        "required": [
                                                            "name",
                                                            "valueFrom"
                                                        ],
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "webServiceUrl"
                                                                ]
                                                            },
                                                            "valueFrom": {
                                                                "type": "object",
                                                                "required": [
                                                                    "configMapKeyRef"
                                                                ],
                                                                "properties": {
                                                                    "configMapKeyRef": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name",
                                                                            "key"
                                                                        ],
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "pulsar-config"
                                                                                ]
                                                                            },
                                                                            "key": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "webServiceUrl"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "type": "object",
                                                        "required": [
                                                            "name",
                                                            "valueFrom"
                                                        ],
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "brokerServiceUrl"
                                                                ]
                                                            },
                                                            "valueFrom": {
                                                                "type": "object",
                                                                "required": [
                                                                    "configMapKeyRef"
                                                                ],
                                                                "properties": {
                                                                    "configMapKeyRef": {
                                                                        "type": "object",
                                                                        "required": [
                                                                            "name",
                                                                            "key"
                                                                        ],
                                                                        "properties": {
                                                                            "name": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "pulsar-config"
                                                                                ]
                                                                            },
                                                                            "key": {
                                                                                "type": "string",
                                                                                "enum": [
                                                                                    "brokerServiceUrl"
                                                                                ]
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                ],
                                                "default": [
                                                    {
                                                        "name": "webServiceUrl",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "name": "pulsar-config",
                                                                "key": "webServiceUrl"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "brokerServiceUrl",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "name": "pulsar-config",
                                                                "key": "brokerServiceUrl"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            "resources": {
                                                "type": "object",
                                                "required": [
                                                    "requests",
                                                    "limits"
                                                ],
                                                "properties": {
                                                    "requests": {
                                                        "type": "object",
                                                        "required": [
                                                            "memory"
                                                        ],
                                                        "properties": {
                                                            "memory": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "256Mi"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "limits": {
                                                        "type": "object",
                                                        "required": [
                                                            "memory"
                                                        ],
                                                        "properties": {
                                                            "memory": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "512Mi"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                ],
                                "default": [
                                    {
                                        "name": "pulsar-admin",
                                        "image": "apachepulsar/pulsar:latest",
                                        "command": [
                                            "/bin/bash"
                                        ],
                                        "args": [
                                            "-c",
                                            "bin/pulsar-admin"
                                        ],
                                        "env": [
                                            {
                                                "name": "webServiceUrl",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "name": "pulsar-config",
                                                        "key": "webServiceUrl"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "brokerServiceUrl",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "name": "pulsar-config",
                                                        "key": "brokerServiceUrl"
                                                    }
                                                }
                                            }
                                        ],
                                        "resources": {
                                            "requests": {
                                                "memory": "256Mi"
                                            },
                                            "limits": {
                                                "memory": "512Mi"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pod"
                    },
                    {
                        "required": [
                            "apiVersion",
                            "kind",
                            "metadata",
                            "spec"
                        ]
                    }
                ]
            },
            "PodAffinity": {
                "type": "object",
                "properties": {
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodAffinityTerm"
                        }
                    },
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WeightedPodAffinityTerm"
                        }
                    }
                }
            },
            "PodAffinityTerm": {
                "type": "object",
                "required": [
                    "topologyKey"
                ],
                "properties": {
                    "labelSelector": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LabelSelector"
                            }
                        ],
                        "nullable": true
                    },
                    "namespaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "topologyKey": {
                        "type": "string"
                    },
                    "namespaceSelector": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LabelSelector"
                            }
                        ],
                        "nullable": true
                    },
                    "matchLabelKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mismatchLabelKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PodAntiAffinity": {
                "type": "object",
                "properties": {
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodAffinityTerm"
                        }
                    },
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WeightedPodAffinityTerm"
                        }
                    }
                }
            },
            "PodCondition": {
                "type": "object",
                "required": [
                    "type",
                    "status"
                ],
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/PodConditionType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ConditionStatus"
                    },
                    "lastProbeTime": {
                        "$ref": "#/components/schemas/Time"
                    },
                    "lastTransitionTime": {
                        "$ref": "#/components/schemas/Time"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "PodConditionType": {
                "type": "string"
            },
            "PodDNSConfig": {
                "type": "object",
                "properties": {
                    "nameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodDNSConfigOption"
                        }
                    }
                }
            },
            "PodDNSConfigOption": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PodIP": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string"
                    }
                }
            },
            "PodOS": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/OSName"
                    }
                }
            },
            "PodPhase": {
                "type": "string"
            },
            "PodQOSClass": {
                "type": "string"
            },
            "PodReadinessGate": {
                "type": "object",
                "required": [
                    "conditionType"
                ],
                "properties": {
                    "conditionType": {
                        "$ref": "#/components/schemas/PodConditionType"
                    }
                }
            },
            "PodResizeStatus": {
                "type": "string"
            },
            "PodResourceClaim": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "source": {
                        "$ref": "#/components/schemas/ClaimSource"
                    }
                }
            },
            "PodResourceClaimStatus": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "resourceClaimName": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PodSchedulingGate": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "PodSecurityContext": {
                "type": "object",
                "properties": {
                    "seLinuxOptions": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SELinuxOptions"
                            }
                        ],
                        "nullable": true
                    },
                    "windowsOptions": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WindowsSecurityContextOptions"
                            }
                        ],
                        "nullable": true
                    },
                    "runAsUser": {
                        "type": "integer",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "runAsGroup": {
                        "type": "integer",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "runAsNonRoot": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "supplementalGroups": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "fsGroup": {
                        "type": "integer",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "sysctls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sysctl"
                        }
                    },
                    "fsGroupChangePolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "seccompProfile": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SeccompProfile"
                            }
                        ],
                        "nullable": true
                    },
                    "appArmorProfile": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AppArmorProfile"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "PodSpec": {
                "type": "object",
                "required": [
                    "containers"
                ],
                "properties": {
                    "volumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Volume"
                        }
                    },
                    "initContainers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Container"
                        }
                    },
                    "containers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Container"
                        }
                    },
                    "ephemeralContainers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EphemeralContainer"
                        }
                    },
                    "restartPolicy": {
                        "$ref": "#/components/schemas/RestartPolicy"
                    },
                    "terminationGracePeriodSeconds": {
                        "type": "integer",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "activeDeadlineSeconds": {
                        "type": "integer",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "dnsPolicy": {
                        "$ref": "#/components/schemas/DNSPolicy"
                    },
                    "nodeSelector": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "serviceAccountName": {
                        "type": "string"
                    },
                    "serviceAccount": {
                        "type": "string"
                    },
                    "automountServiceAccountToken": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "nodeName": {
                        "type": "string"
                    },
                    "hostNetwork": {
                        "type": "boolean"
                    },
                    "hostPID": {
                        "type": "boolean"
                    },
                    "hostIPC": {
                        "type": "boolean"
                    },
                    "shareProcessNamespace": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "securityContext": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PodSecurityContext"
                            }
                        ],
                        "nullable": true
                    },
                    "imagePullSecrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocalObjectReference"
                        }
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "subdomain": {
                        "type": "string"
                    },
                    "affinity": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Affinity"
                            }
                        ],
                        "nullable": true
                    },
                    "schedulerName": {
                        "type": "string"
                    },
                    "tolerations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Toleration"
                        }
                    },
                    "hostAliases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HostAlias"
                        }
                    },
                    "priorityClassName": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    },
                    "dnsConfig": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PodDNSConfig"
                            }
                        ],
                        "nullable": true
                    },
                    "readinessGates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodReadinessGate"
                        }
                    },
                    "runtimeClassName": {
                        "type": "string",
                        "nullable": true
                    },
                    "enableServiceLinks": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "preemptionPolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "overhead": {
                        "$ref": "#/components/schemas/ResourceList"
                    },
                    "topologySpreadConstraints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TopologySpreadConstraint"
                        }
                    },
                    "setHostnameAsFQDN": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "os": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PodOS"
                            }
                        ],
                        "nullable": true
                    },
                    "hostUsers": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "schedulingGates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodSchedulingGate"
                        }
                    },
                    "resourceClaims": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodResourceClaim"
                        }
                    }
                }
            },
            "PodStatus": {
                "type": "object",
                "properties": {
                    "phase": {
                        "$ref": "#/components/schemas/PodPhase"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodCondition"
                        }
                    },
                    "message": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "nominatedNodeName": {
                        "type": "string"
                    },
                    "hostIP": {
                        "type": "string"
                    },
                    "hostIPs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HostIP"
                        }
                    },
                    "podIP": {
                        "type": "string"
                    },
                    "podIPs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodIP"
                        }
                    },
                    "startTime": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Time"
                            }
                        ],
                        "nullable": true
                    },
                    "initContainerStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerStatus"
                        }
                    },
                    "containerStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerStatus"
                        }
                    },
                    "qosClass": {
                        "$ref": "#/components/schemas/PodQOSClass"
                    },
                    "ephemeralContainerStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContainerStatus"
                        }
                    },
                    "resize": {
                        "$ref": "#/components/schemas/PodResizeStatus"
                    },
                    "resourceClaimStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PodResourceClaimStatus"
                        }
                    }
                }
            },
            "PortworxVolumeSource": {
                "type": "object",
                "required": [
                    "volumeID"
                ],
                "properties": {
                    "volumeID": {
                        "type": "string"
                    },
                    "fsType": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                }
            },
            "PreferredSchedulingTerm": {
                "type": "object",
                "required": [
                    "weight",
                    "preference"
                ],
                "properties": {
                    "weight": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "preference": {
                        "$ref": "#/components/schemas/NodeSelectorTerm"
                    }
                }
            },
            "Probe": {
                "type": "object",
                "properties": {
                    "initialDelaySeconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeoutSeconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "periodSeconds": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "successThreshold": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "failureThreshold": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "terminationGracePeriodSeconds": {
                        "type": "integer",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ProbeHandler"
                    }
                ]
            },
            "ProbeHandler": {
                "type": "object",
                "properties": {
                    "exec": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExecAction"
                            }
                        ],
                        "nullable": true
                    },
                    "httpGet": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HTTPGetAction"
                            }
                        ],
                        "nullable": true
                    },
                    "tcpSocket": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TCPSocketAction"
                            }
                        ],
                        "nullable": true
                    },
                    "grpc": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GRPCAction"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "ProjectedVolumeSource": {
                "type": "object",
                "properties": {
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VolumeProjection"
                        }
                    },
                    "defaultMode": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    }
                }
            },
            "Protocol": {
                "type": "string"
            },
            "PullPolicy": {
                "type": "string"
            },
            "Quantity": {},
            "QuobyteVolumeSource": {
                "type": "object",
                "required": [
                    "registry",
                    "volume"
                ],
                "properties": {
                    "registry": {
                        "type": "string"
                    },
                    "volume": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "user": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "tenant": {
                        "type": "string"
                    }
                }
            },
            "RBDVolumeSource": {
                "type": "object",
                "required": [
                    "monitors",
                    "image"
                ],
                "properties": {
                    "monitors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "image": {
                        "type": "string"
                    },
                    "fsType": {
                        "type": "string"
                    },
                    "pool": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "keyring": {
                        "type": "string"
                    },
                    "secretRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalObjectReference"
                            }
                        ],
                        "nullable": true
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                }
            },
            "ResourceClaim": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "ResourceFieldSelector": {
                "type": "object",
                "required": [
                    "resource"
                ],
                "properties": {
                    "containerName": {
                        "type": "string"
                    },
                    "resource": {
                        "type": "string"
                    },
                    "divisor": {
                        "$ref": "#/components/schemas/Quantity"
                    }
                }
            },
            "ResourceList": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/Quantity"
                }
            },
            "ResourceName": {
                "type": "string"
            },
            "ResourceRequirements": {
                "type": "object",
                "properties": {
                    "limits": {
                        "$ref": "#/components/schemas/ResourceList"
                    },
                    "requests": {
                        "$ref": "#/components/schemas/ResourceList"
                    },
                    "claims": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceClaim"
                        }
                    }
                }
            },
            "ResourceResizeRestartPolicy": {
                "type": "string"
            },
            "RestartPolicy": {
                "type": "string"
            },
            "SELinuxOptions": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string"
                    }
                }
            },
            "ScaleIOVolumeSource": {
                "type": "object",
                "required": [
                    "gateway",
                    "system"
                ],
                "properties": {
                    "gateway": {
                        "type": "string"
                    },
                    "system": {
                        "type": "string"
                    },
                    "secretRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalObjectReference"
                            }
                        ],
                        "nullable": true
                    },
                    "sslEnabled": {
                        "type": "boolean"
                    },
                    "protectionDomain": {
                        "type": "string"
                    },
                    "storagePool": {
                        "type": "string"
                    },
                    "storageMode": {
                        "type": "string"
                    },
                    "volumeName": {
                        "type": "string"
                    },
                    "fsType": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                }
            },
            "SeccompProfile": {
                "type": "object",
                "required": [
                    "type"
                ],
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/SeccompProfileType"
                    },
                    "localhostProfile": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SeccompProfileType": {
                "type": "string"
            },
            "SecretEnvSource": {
                "type": "object",
                "properties": {
                    "optional": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LocalObjectReference"
                    }
                ]
            },
            "SecretKeySelector": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "optional": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LocalObjectReference"
                    },
                    {
                        "required": [
                            "key"
                        ]
                    }
                ]
            },
            "SecretProjection": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeyToPath"
                        }
                    },
                    "optional": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/LocalObjectReference"
                    }
                ]
            },
            "SecretVolumeSource": {
                "type": "object",
                "properties": {
                    "secretName": {
                        "type": "string"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeyToPath"
                        }
                    },
                    "defaultMode": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    },
                    "optional": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "SecurityContext": {
                "type": "object",
                "properties": {
                    "capabilities": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Capabilities"
                            }
                        ],
                        "nullable": true
                    },
                    "privileged": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "seLinuxOptions": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SELinuxOptions"
                            }
                        ],
                        "nullable": true
                    },
                    "windowsOptions": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WindowsSecurityContextOptions"
                            }
                        ],
                        "nullable": true
                    },
                    "runAsUser": {
                        "type": "integer",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "runAsGroup": {
                        "type": "integer",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "runAsNonRoot": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "readOnlyRootFilesystem": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "allowPrivilegeEscalation": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "procMount": {
                        "type": "string",
                        "nullable": true
                    },
                    "seccompProfile": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SeccompProfile"
                            }
                        ],
                        "nullable": true
                    },
                    "appArmorProfile": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AppArmorProfile"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "ServiceAccountTokenProjection": {
                "type": "object",
                "required": [
                    "path"
                ],
                "properties": {
                    "audience": {
                        "type": "string"
                    },
                    "expirationSeconds": {
                        "type": "integer",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    },
                    "path": {
                        "type": "string"
                    }
                }
            },
            "SleepAction": {
                "type": "object",
                "required": [
                    "seconds"
                ],
                "properties": {
                    "seconds": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "StorageMedium": {
                "type": "string"
            },
            "StorageOSVolumeSource": {
                "type": "object",
                "properties": {
                    "volumeName": {
                        "type": "string"
                    },
                    "volumeNamespace": {
                        "type": "string"
                    },
                    "fsType": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "secretRef": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalObjectReference"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "Sysctl": {
                "type": "object",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "TCPSocketAction": {
                "type": "object",
                "required": [
                    "port"
                ],
                "properties": {
                    "port": {
                        "$ref": "#/components/schemas/IntOrString"
                    },
                    "host": {
                        "type": "string"
                    }
                }
            },
            "TaintEffect": {
                "type": "string"
            },
            "TerminationMessagePolicy": {
                "type": "string"
            },
            "Time": {},
            "Toleration": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "operator": {
                        "$ref": "#/components/schemas/TolerationOperator"
                    },
                    "value": {
                        "type": "string"
                    },
                    "effect": {
                        "$ref": "#/components/schemas/TaintEffect"
                    },
                    "tolerationSeconds": {
                        "type": "integer",
                        "minimum": -9223372036854775808,
                        "maximum": 9223372036854775807,
                        "nullable": true
                    }
                }
            },
            "TolerationOperator": {
                "type": "string"
            },
            "TopologySpreadConstraint": {
                "type": "object",
                "required": [
                    "maxSkew",
                    "topologyKey",
                    "whenUnsatisfiable"
                ],
                "properties": {
                    "maxSkew": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "topologyKey": {
                        "type": "string"
                    },
                    "whenUnsatisfiable": {
                        "$ref": "#/components/schemas/UnsatisfiableConstraintAction"
                    },
                    "labelSelector": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LabelSelector"
                            }
                        ],
                        "nullable": true
                    },
                    "minDomains": {
                        "type": "integer",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "nullable": true
                    },
                    "nodeAffinityPolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "nodeTaintsPolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "matchLabelKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "TypeMeta": {
                "type": "object",
                "properties": {
                    "kind": {
                        "type": "string"
                    },
                    "apiVersion": {
                        "type": "string"
                    }
                }
            },
            "TypedLocalObjectReference": {
                "type": "object",
                "required": [
                    "kind",
                    "name"
                ],
                "properties": {
                    "apiGroup": {
                        "type": "string",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "TypedObjectReference": {
                "type": "object",
                "required": [
                    "kind",
                    "name"
                ],
                "properties": {
                    "apiGroup": {
                        "type": "string",
                        "nullable": true
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "UID": {
                "type": "string"
            },
            "URIScheme": {
                "type": "string"
            },
            "UnsatisfiableConstraintAction": {
                "type": "string"
            },
            "Volume": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/VolumeSource"
                    },
                    {
                        "required": [
                            "name"
                        ]
                    }
                ]
            },
            "VolumeDevice": {
                "type": "object",
                "required": [
                    "name",
                    "devicePath"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "devicePath": {
                        "type": "string"
                    }
                }
            },
            "VolumeMount": {
                "type": "object",
                "required": [
                    "name",
                    "mountPath"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "recursiveReadOnly": {
                        "type": "string",
                        "nullable": true
                    },
                    "mountPath": {
                        "type": "string"
                    },
                    "subPath": {
                        "type": "string"
                    },
                    "mountPropagation": {
                        "type": "string",
                        "nullable": true
                    },
                    "subPathExpr": {
                        "type": "string"
                    }
                }
            },
            "VolumeMountStatus": {
                "type": "object",
                "required": [
                    "name",
                    "mountPath"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "mountPath": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "recursiveReadOnly": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "VolumeProjection": {
                "type": "object",
                "properties": {
                    "secret": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SecretProjection"
                            }
                        ],
                        "nullable": true
                    },
                    "downwardAPI": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DownwardAPIProjection"
                            }
                        ],
                        "nullable": true
                    },
                    "configMap": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConfigMapProjection"
                            }
                        ],
                        "nullable": true
                    },
                    "serviceAccountToken": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ServiceAccountTokenProjection"
                            }
                        ],
                        "nullable": true
                    },
                    "clusterTrustBundle": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ClusterTrustBundleProjection"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "VolumeResourceRequirements": {
                "type": "object",
                "properties": {
                    "limits": {
                        "$ref": "#/components/schemas/ResourceList"
                    },
                    "requests": {
                        "$ref": "#/components/schemas/ResourceList"
                    }
                }
            },
            "VolumeSource": {
                "type": "object",
                "properties": {
                    "hostPath": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HostPathVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "emptyDir": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmptyDirVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "gcePersistentDisk": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GCEPersistentDiskVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "awsElasticBlockStore": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AWSElasticBlockStoreVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "gitRepo": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GitRepoVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "secret": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SecretVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "nfs": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NFSVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "iscsi": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ISCSIVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "glusterfs": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GlusterfsVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "persistentVolumeClaim": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PersistentVolumeClaimVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "rbd": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RBDVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "flexVolume": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlexVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "cinder": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CinderVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "cephfs": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CephFSVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "flocker": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlockerVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "downwardAPI": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DownwardAPIVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "fc": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FCVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "azureFile": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AzureFileVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "configMap": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConfigMapVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "vsphereVolume": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VsphereVirtualDiskVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "quobyte": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/QuobyteVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "azureDisk": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AzureDiskVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "photonPersistentDisk": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PhotonPersistentDiskVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "projected": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProjectedVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "portworxVolume": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PortworxVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "scaleIO": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ScaleIOVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "storageos": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StorageOSVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "csi": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CSIVolumeSource"
                            }
                        ],
                        "nullable": true
                    },
                    "ephemeral": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EphemeralVolumeSource"
                            }
                        ],
                        "nullable": true
                    }
                }
            },
            "VsphereVirtualDiskVolumeSource": {
                "type": "object",
                "required": [
                    "volumePath"
                ],
                "properties": {
                    "volumePath": {
                        "type": "string"
                    },
                    "fsType": {
                        "type": "string"
                    },
                    "storagePolicyName": {
                        "type": "string"
                    },
                    "storagePolicyID": {
                        "type": "string"
                    }
                }
            },
            "WeightedPodAffinityTerm": {
                "type": "object",
                "required": [
                    "weight",
                    "podAffinityTerm"
                ],
                "properties": {
                    "weight": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "podAffinityTerm": {
                        "$ref": "#/components/schemas/PodAffinityTerm"
                    }
                }
            },
            "WindowsSecurityContextOptions": {
                "type": "object",
                "properties": {
                    "gmsaCredentialSpecName": {
                        "type": "string",
                        "nullable": true
                    },
                    "gmsaCredentialSpec": {
                        "type": "string",
                        "nullable": true
                    },
                    "runAsUserName": {
                        "type": "string",
                        "nullable": true
                    },
                    "hostProcess": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            }
        }
    }
}
